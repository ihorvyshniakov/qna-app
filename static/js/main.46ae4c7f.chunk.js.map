{"version":3,"sources":["helpers/index.js","components/MyDialog.jsx","components/MyTable.jsx","components/Header.jsx","requests/index.js","App.js","reportWebVitals.js","reducers/index.js","reducers/rowsPerPage.js","reducers/questions.js","reducers/answers.js","index.js"],"names":["convertTimestampToDateString","timestamp","date","Date","String","slice","MyDialog","isModalOpen","setModalOpen","actualAnswers","Dialog","scroll","open","onClose","DialogTitle","variant","component","sx","display","justifyContent","alignItems","Button","onClick","DialogContent","dividers","DialogContentText","List","map","answer","ListItem","flexDirection","ListItemText","primary","body","maxWidth","wordBreak","Box","width","Typography","color","creation_date","owner","display_name","Divider","answer_id","length","MyTable","questions","showQuestionAnswers","page","changePage","rowsPerPage","changeRowsPerPage","TableContainer","Paper","Table","TableBody","question","TableRow","hover","cursor","question_id","TableCell","title","TablePagination","count","onPageChange","rowsPerPageOptions","onRowsPerPageChange","showFirstButton","showLastButton","Header","AppBar","position","align","height","lineHeight","getQuestions","questionsQuantity","axios","get","then","response","data","items","catch","err","console","error","connect","state","storeRowsPerPage","storeQuestionsList","storeAnswersList","answers","dispatch","onAddQuestions","questionsList","pageNum","type","payload","onAddRowsQty","onClearQuestions","onAddAnswers","answersList","useState","isLoading","setLoading","setActualAnswers","setQuestions","setPage","setRowsPerPage","useEffect","some","item","filteredList","filter","className","fontSize","Container","p","mb","questionId","neededAnswersFromStore","getAnswers","event","newPage","parseInt","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46ae4c7f.chunk.js","sourcesContent":["export function convertTimestampToDateString(timestamp) {\n\tlet date = new Date(timestamp * 1000)\n\treturn String(date).slice(4,21)\n}","import { Fragment } from 'react'\nimport { Button, Dialog, DialogContent, DialogContentText, DialogTitle, Divider, List, ListItem, ListItemText, Typography } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { Box } from '@mui/system'\n\nimport { convertTimestampToDateString } from '../helpers'\n\nconst MyDialog = ({ isModalOpen, setModalOpen, actualAnswers }) => {\n\treturn (\n\t\t<Dialog\n\t\t\tscroll='paper'\n\t\t\topen={isModalOpen}\n\t\t\tonClose={()=>setModalOpen(false)}\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tvariant=\"h5\"\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tsx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}\n\t\t\t>\n\t\t\t\tAnswers\n\t\t\t\t<Button onClick={()=>setModalOpen(false)}>\n\t\t\t\t\t<CloseIcon/>\n\t\t\t\t</Button>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent dividers={true}>\n\t\t\t\t<DialogContentText\n\t\t\t\t\tcomponent='div'\n\t\t\t\t>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{actualAnswers.map(answer => (\n\t\t\t\t\t\t\t<Fragment key={answer.answer_id}>\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t\t\t\tsx={{display: 'flex', flexDirection: 'column'}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\tprimary={answer.body}\n\t\t\t\t\t\t\t\t\t\tsx={{maxWidth: '100%', wordBreak: 'break-word'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\tsx={{width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t\t\t\t\t\tvariant='subtitle2'\n\t\t\t\t\t\t\t\t\t\t\tsx={{color: 'red'}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{convertTimestampToDateString(answer.creation_date)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\t\t\t\tsx={{color: 'blue'}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{answer.owner.display_name}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t<Divider/>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{actualAnswers.length === 0 && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"There's no answers to this question.\"/>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t<Divider/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</List>\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\n\nexport default MyDialog\n","import { Paper, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow } from \"@mui/material\"\n\n\nconst MyTable = ({\n\tquestions,\n\tshowQuestionAnswers,\n\tpage,\n\tchangePage,\n\trowsPerPage,\n\tchangeRowsPerPage\n}) => {\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{questions.map(question => (\n\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\thover={true}\n\t\t\t\t\t\t\tsx={{cursor: 'pointer'}}\n\t\t\t\t\t\t\tkey={question.question_id}\n\t\t\t\t\t\t\tonClick={() => showQuestionAnswers(question.question_id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TableCell>{question.title}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TablePagination\n\t\t\t\t\t\t\tcount={120}\n\t\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\t\tonPageChange={changePage}\n\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\t\t\trowsPerPageOptions={[10, 20, 30]}\n\t\t\t\t\t\t\tonRowsPerPageChange={changeRowsPerPage}\n\t\t\t\t\t\t\tshowFirstButton\n\t\t\t\t\t\t\tshowLastButton\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t)\n}\n\nexport default MyTable\n","import { AppBar, Typography } from '@mui/material'\n\nconst Header = () => {\n\treturn (\n\t\t<AppBar position=\"static\">\n\t\t\t<Typography\n\t\t\t\tvariant=\"h6\"\n\t\t\t\tcomponent=\"h1\"\n\t\t\t\talign='center'\n\t\t\t\tsx={{height: '40px', lineHeight: '40px'}}\n\t\t\t>\n\t\t\t\tStack overflow QnA App\n\t\t\t</Typography>\n\t\t</AppBar>\n\t)\n}\n\nexport default Header\n","import axios from \"axios\"\n\nexport function getQuestions(page, questionsQuantity) {\n\treturn axios.get(`https://api.stackexchange.com/2.3/questions?page=${page}&pagesize=${questionsQuantity}&fromdate=1635724800&todate=1637798400&order=desc&sort=activity&site=stackoverflow`)\n\t\t.then((response) => {\n\t\t\tvar questionsList = response.data.items\n\t\t\treturn questionsList\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.error(err)\n\t\t\treturn []\n\t\t})\n}\n\nexport function getAnswers(questionId) {\n\treturn axios.get(`https://api.stackexchange.com/2.3/questions/${questionId}/answers?order=desc&sort=activity&site=stackoverflow&filter=!nKzQURF6Y5`)\n\t\t.then((response) => {\n\t\t\tvar commentsList = response.data.items\n\t\t\treturn commentsList\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.error(err)\n\t\t\treturn []\n\t\t})\n}","import { useEffect, useState } from 'react'\nimport { Container, Typography } from '@mui/material'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport { connect } from 'react-redux'\n\nimport './App.css'\n\nimport MyDialog from './components/MyDialog';\nimport MyTable from './components/MyTable';\nimport Header from './components/Header';\nimport { getQuestions, getAnswers } from './requests'\n\nconst App = ({\n\tstoreRowsPerPage,\n\tstoreQuestionsList,\n\tstoreAnswersList,\n\tonAddQuestions,\n\tonClearQuestions,\n\tonAddRowsQty,\n\tonAddAnswers\n}) => {\n\tconst [isModalOpen, setModalOpen] = useState(false)\n\tconst [isLoading, setLoading] = useState(false)\n\n\tconst [actualAnswers, setActualAnswers] = useState([])\n\tconst [questions, setQuestions] = useState([])\n\n\tconst [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n\tconst changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const changeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\tconst showQuestionAnswers = (questionId) => {\n\t\tlet isQuestionInStore = storeAnswersList.some(item=>item.question_id == questionId)\n\n\t\tif (isQuestionInStore){\n\t\t\t// show from store\n\t\t\tlet neededAnswersFromStore = storeAnswersList.filter(item=>item.question_id == questionId)[0].answersList\n\t\t\tsetActualAnswers(neededAnswersFromStore)\n\t\t\tsetModalOpen(true)\n\t\t} else {\n\t\t\t// write to store and show\n\t\t\tsetLoading(true)\n\t\t\tgetAnswers(questionId)\n\t\t\t\t.then(answers => {\n\t\t\t\t\tsetActualAnswers(answers)\n\t\t\t\t\treturn answers\n\t\t\t\t})\n\t\t\t\t.then(answers => {\n\t\t\t\t\tonAddAnswers(answers, questionId)\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t})\n\t\t\t\t.then(() => setModalOpen(true))\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tlet isRowsPerPageSame = storeRowsPerPage == rowsPerPage\n\n\t\tif (isRowsPerPageSame){\n\t\t\tlet isNeededPageInStore = storeQuestionsList.some(item=>item.pageNum == page)\n\n\t\t\tif (isNeededPageInStore){\n\t\t\t\tlet filteredList = storeQuestionsList.filter(item=>item.pageNum == page)[0].questionsList\n\t\t\t\tsetQuestions(filteredList)\n\t\t\t} else {\n\t\t\t\tonAddRowsQty(rowsPerPage)\n\t\t\t\tsetLoading(true)\n\t\t\t\tgetQuestions(page + 1, rowsPerPage).then(questions => {\n\t\t\t\t\tsetQuestions(questions)\n\t\t\t\t\tonAddQuestions(questions, page)\n\t\t\t\t\tsetLoading(false)\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tonAddRowsQty(rowsPerPage)\n\t\t\tonClearQuestions()\n\t\t\tsetLoading(true)\n\t\t\tgetQuestions(page + 1, rowsPerPage).then(questions => {\n\t\t\t\tsetQuestions(questions)\n\t\t\t\tonAddQuestions(questions, page)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t}\n\t}, [page, rowsPerPage])\n\n  return (\n    <div className=\"App\">\n\t\t\t{\n\t\t\t\tisLoading && (\n\t\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t\t<AutorenewIcon sx={{fontSize: 70}} />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<Header/>\n\t\t\t<Container sx={{width: '100%', p: '40px 20px 80px'}}>\n\t\t\t\t<Typography variant=\"h5\" align='center' sx={{mb: '10px'}}>\n\t\t\t\t\tQuestions\n\t\t\t\t</Typography>\n\t\t\t\t<MyTable\n\t\t\t\t\tquestions={questions}\n\t\t\t\t\tshowQuestionAnswers={showQuestionAnswers}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tchangeRowsPerPage={changeRowsPerPage}\n\t\t\t\t/>\n\t\t\t\t<MyDialog\n\t\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\t\tsetModalOpen={setModalOpen}\n\t\t\t\t\tactualAnswers={actualAnswers}\n\t\t\t\t/>\n\t\t\t</Container>\n    </div>\n  );\n}\n\nexport default connect(\n\tstate => ({\n\t\tstoreRowsPerPage: state.rowsPerPage,\n\t\tstoreQuestionsList: state.questions,\n\t\tstoreAnswersList: state.answers\n\t}),\n\tdispatch => ({\n\t\tonAddQuestions: (questionsList, pageNum) => {\n\t\t\tconst payload = {\n\t\t\t\tpageNum: pageNum,\n\t\t\t\tquestionsList: questionsList\n\t\t\t}\n\t\t\tdispatch({ type: 'ADD_QUESTIONS', payload: payload })\n\t\t},\n\t\tonAddRowsQty: (rowsPerPage) => {\n\t\t\tdispatch({ type: 'ADD_ROWS_QUANTITY', payload: rowsPerPage })\n\t\t},\n\t\tonClearQuestions: () => {\n\t\t\tdispatch({ type: 'CLEAR_QUESTIONS' })\n\t\t},\n\t\tonAddAnswers: (answersList, question_id) => {\n\t\t\tconst payload = {\n\t\t\t\tquestion_id,\n\t\t\t\tanswersList\n\t\t\t}\n\t\t\tdispatch({ type: 'ADD_ANSWER', payload: payload })\n\t\t},\n\t})\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\nimport questions from './questions'\nimport rowsPerPage from './rowsPerPage'\nimport answers from './answers'\n\nexport default combineReducers({\n\trowsPerPage,\n\tquestions,\n\tanswers\n})","export default function rowsPerPage(state = '10', action) {\n\tif (action.type === 'ADD_ROWS_QUANTITY'){\n\t\treturn String(action.payload)\n\t}\n\treturn state\n}","export default function questions(state = [], action) {\n\tswitch (action.type) {\n\t\tcase 'ADD_QUESTIONS':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\tpageNum: action.payload.pageNum,\n\t\t\t\t\tquestionsList: action.payload.questionsList\n\t\t\t\t}\n\t\t\t]\n\t\tcase 'CLEAR_QUESTIONS':\n\t\t\treturn []\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","export default function answers(state = [], action) {\n\tif (action.type === 'ADD_ANSWER'){\n\t\treturn [\n\t\t\t...state,\n\t\t\t{\n\t\t\t\tquestion_id: action.payload.question_id,\n\t\t\t\tanswersList: action.payload.answersList\n\t\t\t}\n\t\t]\n\t}\n\treturn state\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    \t<App />\n\t\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}